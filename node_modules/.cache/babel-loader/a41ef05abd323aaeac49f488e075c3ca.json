{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nexport default {\n  data: function data() {\n    return {\n      valid: true,\n      name: \"\",\n      nameRules: [function (v) {\n        return !!v || \"Name is required\";\n      }, function (v) {\n        return v && v.length <= 10 || \"Name must be less than 10 characters\";\n      }],\n      email: \"\",\n      emailRules: [function (v) {\n        return !!v || \"メールアドレスを入力してください\";\n      }, function (v) {\n        return /.+@.+\\..+/.test(v) || \"メールアドレスが不正です\";\n      }],\n      password: \"\",\n      message: \"\",\n      errorMessage: \"\"\n    };\n  },\n  mounted: function mounted() {\n    if (localStorage.message) {\n      this.message = localStorage.message;\n      localStorage.message = \"\";\n    }\n  },\n  computed: {\n    isValid: function isValid() {\n      return !this.valid;\n    }\n  },\n  methods: {\n    validate: function validate() {\n      this.$refs.form.validate();\n    },\n    reset: function reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation: function resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n    submit: function submit() {\n      var _this = this;\n\n      firebase.auth().signInWithEmailAndPassword(this.email, this.password).then(function (result) {\n        console.log(\"success\");\n        console.log(\"user\", result.user);\n        var auth = {\n          displayName: result.user.displayName,\n          email: result.user.email,\n          uid: result.user.uid,\n          refreshToken: result.user.refreshToken,\n          photoURL: result.user.photoURL\n        };\n        sessionStorage.setItem(\"user\", JSON.stringify(auth));\n\n        _this.$router.push(\"/\");\n      }).catch(function (error) {\n        console.log(\"fail\", error);\n        _this.errorMessage = \"ログインに失敗しました\";\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AAEA;AACAA;AAAA;AACAC,iBADA;AAEAC,cAFA;AAGAC,kBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA,CAHA;AAOAC,eAPA;AAQAC,mBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA,CARA;AAYAC,kBAZA;AAaAC,iBAbA;AAcAC;AAdA;AAAA,GADA;AAiBAC,SAjBA,qBAiBA;AACA;AACA;AACAC;AACA;AACA,GAtBA;AAuBAC;AACAC,WADA,qBACA;AACA;AACA;AAHA,GAvBA;AA4BAC;AACAC,YADA,sBACA;AACA;AACA,KAHA;AAIAC,SAJA,mBAIA;AACA;AACA,KANA;AAOAC,mBAPA,6BAOA;AACA;AACA,KATA;AAUAC,UAVA,oBAUA;AAAA;;AACAC,eACAC,IADA,GAEAC,0BAFA,CAEA,UAFA,EAEA,aAFA,EAGAC,IAHA,CAGA;AACAC;AACAA;AAEA;AACAC,8CADA;AAEAnB,kCAFA;AAGAoB,8BAHA;AAIAC,gDAJA;AAKAC;AALA;AAQAC;;AAEA;AACA,OAlBA,EAmBAC,KAnBA,CAmBA;AACAN;AACA;AACA,OAtBA;AAuBA;AAlCA;AA5BA","names":["data","valid","name","nameRules","email","emailRules","password","message","errorMessage","mounted","localStorage","computed","isValid","methods","validate","reset","resetValidation","submit","firebase","auth","signInWithEmailAndPassword","then","console","displayName","uid","refreshToken","photoURL","sessionStorage","catch"],"sourceRoot":"src/views","sources":["LoginView.vue"],"sourcesContent":["<template>\n <v-app>\n  <div class=\"login-wrap\">\n   <v-card class=\"login-form\">\n    <v-card-title class=\"login-title\">Login</v-card-title>\n    <v-card-subtitle>ユーザー情報をご入力ください。</v-card-subtitle>\n    <v-btn text color=\"light-blue\" to=\"signup\">新規登録はこちら</v-btn>\n    <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n     <v-text-field\n      v-model=\"email\"\n      :rules=\"emailRules\"\n      label=\"E-mail\"\n      required\n     ></v-text-field>\n\n     <v-text-field\n      v-model=\"password\"\n      type=\"password\"\n      label=\"Password\"\n     ></v-text-field>\n\n     <v-btn\n      color=\"success\"\n      class=\"login-btn\"\n      @click=\"submit\"\n      :disabled=\"isValid\"\n      >Login</v-btn\n     >\n\n     <v-btn>Clear</v-btn>\n\n     <v-alert dense text type=\"success\" class=\"success-message\" v-if=\"message\">\n      <strong>{{ message }}</strong>\n     </v-alert>\n\n     <v-alert\n      dense\n      outlined\n      type=\"error\"\n      class=\"error-message\"\n      v-if=\"errorMessage\"\n     >\n      <strong>{{ errorMessage }}</strong>\n     </v-alert>\n    </v-form>\n   </v-card>\n  </div>\n </v-app>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\n\nexport default {\n data: () => ({\n  valid: true,\n  name: \"\",\n  nameRules: [\n   (v) => !!v || \"Name is required\",\n   (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\n  ],\n  email: \"\",\n  emailRules: [\n   (v) => !!v || \"メールアドレスを入力してください\",\n   (v) => /.+@.+\\..+/.test(v) || \"メールアドレスが不正です\",\n  ],\n  password: \"\",\n  message: \"\",\n  errorMessage: \"\",\n }),\n mounted() {\n  if (localStorage.message) {\n   this.message = localStorage.message;\n   localStorage.message = \"\";\n  }\n },\n computed: {\n  isValid() {\n   return !this.valid;\n  },\n },\n methods: {\n  validate() {\n   this.$refs.form.validate();\n  },\n  reset() {\n   this.$refs.form.reset();\n  },\n  resetValidation() {\n   this.$refs.form.resetValidation();\n  },\n  submit() {\n   firebase\n    .auth()\n    .signInWithEmailAndPassword(this.email, this.password)\n    .then((result) => {\n     console.log(\"success\");\n     console.log(\"user\", result.user);\n\n     const auth = {\n      displayName: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid,\n      refreshToken: result.user.refreshToken,\n      photoURL: result.user.photoURL,\n     };\n\n     sessionStorage.setItem(\"user\", JSON.stringify(auth));\n\n     this.$router.push(\"/\");\n    })\n    .catch((error) => {\n     console.log(\"fail\", error);\n     this.errorMessage = \"ログインに失敗しました\";\n    });\n  },\n },\n};\n</script>\n\n<style>\n.login-wrap {\n padding: 100px;\n}\n\n.login-form {\n width: 600px;\n margin: auto;\n padding: 30px;\n}\n\n.login-title {\n display: inline-block;\n}\n\n.login-btn {\n margin-right: 20px;\n}\n\n.success-message {\n margin-top: 20px;\n}\n\n.error-message {\n margin-top: 20px;\n}\n\n@media screen and (max-width: 600px) {\n .login-form {\n  width: 100%;\n }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}