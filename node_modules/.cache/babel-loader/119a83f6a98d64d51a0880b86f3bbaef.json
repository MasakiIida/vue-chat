{"ast":null,"code":"import _asyncToGenerator from \"/Users/masakiiida/Documents/Project/Portfolio/vue-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  components: {\n    SideBar: SideBar,\n    DeleteRoom: DeleteRoom\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var roomRef, roomDoc;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.roomId = _this.$route.query.room_id;\n              console.log(\"roomId\", _this.roomId);\n              roomRef = firebase.firestore().collection(\"rooms\").doc(_this.roomId);\n              _context.next = 5;\n              return roomRef.get();\n\n            case 5:\n              roomDoc = _context.sent;\n\n              if (roomDoc.exists) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 9;\n              return _this.$router.push(\"/\");\n\n            case 9:\n              _this.room = roomDoc.data();\n              console.log(\"room\", _this.room);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.auth = JSON.parse(sessionStorage.getItem(\"user\"));\n    console.log(this.auth);\n    var roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n    roomRef.collection(\"messages\").orderBy(\"createdAt\", \"asc\").onSnapshot(function (snapshot) {\n      snapshot.docChanges().forEach(function (change) {\n        console.log(\"new message\", change.doc.data());\n\n        _this2.messages.push(change.doc.data());\n      });\n    });\n  },\n  data: function data() {\n    return {\n      messages: [],\n      body: \"\",\n      roomId: \"\",\n      room: null,\n      cards: [\"Today\"],\n      drawer: null,\n      dialog: false,\n      n: \"\",\n      links: [[\"mdi-inbox-arrow-down\", \"Inbox\"], [\"mdi-send\", \"Send\"], [\"mdi-delete\", \"Trash\"], [\"mdi-alert-octagon\", \"Spam\"]],\n      auth: null\n    };\n  },\n  computed: {\n    invalid: function invalid() {\n      if (!this.body) {\n        return true;\n      }\n\n      return false;\n    }\n  },\n  methods: {\n    clear: function clear() {\n      this.body = \"\";\n    },\n    submit: function submit() {\n      var _this3 = this;\n\n      var roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n      roomRef.collection(\"messages\").add({\n        message: this.body,\n        name: this.auth.displayName,\n        photoURL: this.auth.photoURL,\n        createdAt: firebase.firestore.Timestamp.now()\n      }).then(function (result) {\n        console.log(\"success\", result);\n        _this3.body = \"\";\n      }).catch(function (error) {\n        console.log(\"fail\", error);\n        alert(\"メッセージの送信に失敗しました\");\n      });\n    },\n    deleteRoom: function deleteRoom() {\n      var _this4 = this;\n\n      var room_id = this.$route.query.room_id;\n      firebase.firestore().collection(\"rooms\").doc(room_id).delete().then(function () {\n        _this4.$router.push(\"/\");\n\n        console.log(room_id, \"は削除されました\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACAA;AACAC,oBADA;AAEAC;AAFA,GADA;AAKAC,SALA,qBAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACAC;AAEAC,qBAJA,GAIAC,0DAJA;AAAA;AAAA,qBAKAD,aALA;;AAAA;AAKAE,qBALA;;AAAA,kBAMAA,cANA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOA,uBAPA;;AAAA;AASA;AACAH;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,GAhBA;AAiBAI,SAjBA,qBAiBA;AAAA;;AACA;AACAJ;AAEA;AACAC,YACAI,UADA,CACA,UADA,EAEAC,OAFA,CAEA,WAFA,EAEA,KAFA,EAGAC,UAHA,CAGA;AACAC;AACAR;;AACA;AACA,OAHA;AAIA,KARA;AASA,GA/BA;AAgCAS;AAAA;AACAC,kBADA;AAEAC,cAFA;AAGAC,gBAHA;AAIAC,gBAJA;AAKAC,sBALA;AAMAC,kBANA;AAOAC,mBAPA;AAQAC,WARA;AASAC,cACA,iCADA,EAEA,oBAFA,EAGA,uBAHA,EAIA,6BAJA,CATA;AAeAC;AAfA;AAAA,GAhCA;AAiDAC;AACAC,WADA,qBACA;AACA;AACA;AACA;;AACA;AACA;AANA,GAjDA;AAyDAC;AACAC,SADA,mBACA;AACA;AACA,KAHA;AAIAC,UAJA,oBAIA;AAAA;;AACA;AACAvB,cACAI,UADA,CACA,UADA,EAEAoB,GAFA,CAEA;AACAC,0BADA;AAEAC,mCAFA;AAGAC,oCAHA;AAIAC;AAJA,OAFA,EAQAC,IARA,CAQA;AACA9B;AACA;AACA,OAXA,EAYA+B,KAZA,CAYA;AACA/B;AACAgC;AACA,OAfA;AAgBA,KAtBA;AAwBAC,cAxBA,wBAwBA;AAAA;;AACA;AACA/B,eACAgC,SADA,GAEA7B,UAFA,CAEA,OAFA,EAGA8B,GAHA,CAGAC,OAHA,EAIAC,MAJA,GAKAP,IALA,CAKA;AACA;;AACA9B;AACA,OARA;AASA;AAnCA;AAzDA","names":["components","SideBar","DeleteRoom","created","console","roomRef","firebase","roomDoc","mounted","collection","orderBy","onSnapshot","snapshot","data","messages","body","roomId","room","cards","drawer","dialog","n","links","auth","computed","invalid","methods","clear","submit","add","message","name","photoURL","createdAt","then","catch","alert","deleteRoom","firestore","doc","room_id","delete"],"sourceRoot":"src/components/modal","sources":["DeleteRoom.vue"],"sourcesContent":["<template>\n <v-row justify=\"center\">\n  <v-dialog v-model=\"dialog\" max-width=\"290\">\n   <template v-slot:activator=\"{ on, attrs }\">\n    <v-btn\n     class=\"delete-button\"\n     color=\"error\"\n     fab\n     small\n     v-bind=\"attrs\"\n     v-on=\"on\"\n     ><v-icon>mdi-trash-can</v-icon>\n    </v-btn>\n   </template>\n   <v-card>\n    <v-card-title class=\"text-h6\">ルームを削除しますか？</v-card-title>\n    <v-card-actions>\n     <v-spacer></v-spacer>\n     <v-btn color=\"\" text @click=\"dialog = false\"> キャンセル </v-btn>\n     <v-btn color=\"error\" @click=\"dialog = false\"> 削除 </v-btn>\n    </v-card-actions>\n   </v-card>\n  </v-dialog>\n </v-row>\n</template>\n\n<script>\nexport default {\n components: {\n  SideBar,\n  DeleteRoom,\n },\n async created() {\n  this.roomId = this.$route.query.room_id;\n  console.log(\"roomId\", this.roomId);\n\n  const roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n  const roomDoc = await roomRef.get();\n  if (!roomDoc.exists) {\n   await this.$router.push(\"/\");\n  }\n  this.room = roomDoc.data();\n  console.log(\"room\", this.room);\n },\n mounted() {\n  this.auth = JSON.parse(sessionStorage.getItem(\"user\"));\n  console.log(this.auth);\n\n  const roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n  roomRef\n   .collection(\"messages\")\n   .orderBy(\"createdAt\", \"asc\")\n   .onSnapshot((snapshot) => {\n    snapshot.docChanges().forEach((change) => {\n     console.log(\"new message\", change.doc.data());\n     this.messages.push(change.doc.data());\n    });\n   });\n },\n data: () => ({\n  messages: [],\n  body: \"\",\n  roomId: \"\",\n  room: null,\n  cards: [\"Today\"],\n  drawer: null,\n  dialog: false,\n  n: \"\",\n  links: [\n   [\"mdi-inbox-arrow-down\", \"Inbox\"],\n   [\"mdi-send\", \"Send\"],\n   [\"mdi-delete\", \"Trash\"],\n   [\"mdi-alert-octagon\", \"Spam\"],\n  ],\n  auth: null,\n }),\n computed: {\n  invalid() {\n   if (!this.body) {\n    return true;\n   }\n   return false;\n  },\n },\n methods: {\n  clear() {\n   this.body = \"\";\n  },\n  submit() {\n   const roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n   roomRef\n    .collection(\"messages\")\n    .add({\n     message: this.body,\n     name: this.auth.displayName,\n     photoURL: this.auth.photoURL,\n     createdAt: firebase.firestore.Timestamp.now(),\n    })\n    .then((result) => {\n     console.log(\"success\", result);\n     this.body = \"\";\n    })\n    .catch((error) => {\n     console.log(\"fail\", error);\n     alert(\"メッセージの送信に失敗しました\");\n    });\n  },\n\n  deleteRoom() {\n   const room_id = this.$route.query.room_id;\n   firebase\n    .firestore()\n    .collection(\"rooms\")\n    .doc(room_id)\n    .delete()\n    .then(() => {\n     this.$router.push(\"/\");\n     console.log(room_id, \"は削除されました\");\n    });\n  },\n },\n};\n</script>\n</script>\n\n\n\n<style>\n.delete-button {\n position: absolute;\n top: 10px;\n right: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}