{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nimport SideBar from \"@/components/layouts/SideBar\";\nexport default {\n  components: {\n    SideBar\n  },\n\n  async created() {\n    this.user_id = this.$route.query.user_id;\n    const chatRef = firebase.firestore().collection(\"chats\");\n    const snapshot = await chatRef.get();\n    snapshot.forEach(doc => {\n      this.messages.push(doc.data());\n    });\n  },\n\n  data: () => ({\n    messages: [],\n    body: \"\",\n    user_id: \"\",\n    cards: [\"Today\"],\n    drawer: null,\n    links: [[\"mdi-inbox-arrow-down\", \"Inbox\"], [\"mdi-send\", \"Send\"], [\"mdi-delete\", \"Trash\"], [\"mdi-alert-octagon\", \"Spam\"]] //   invalid: false,\n\n  }),\n  computed: {\n    invalid() {\n      if (!this.body) {\n        return true;\n      }\n\n      return false;\n    }\n\n  },\n  methods: {\n    clear() {\n      this.body = \"\";\n    },\n\n    submit() {\n      this.messages.unshift({\n        message: this.body\n      });\n      this.body = \"\";\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AAEA;AACAA;AACAC;AADA,GADA;;AAIA;AACA;AAEA;AACA;AAEAC;AACA;AACA,KAFA;AAGA,GAbA;;AAcAC;AACAC,gBADA;AAEAC,YAFA;AAGAC,eAHA;AAIAC,oBAJA;AAKAC,gBALA;AAMAC,YACA,iCADA,EAEA,oBAFA,EAGA,uBAHA,EAIA,6BAJA,CANA,CAYA;;AAZA,IAdA;AA4BAC;AACAC;AACA;AACA;AACA;;AACA;AACA;;AANA,GA5BA;AAoCAC;AACAC;AACA;AACA,KAHA;;AAIAC;AACA;AAAAC;AAAA;AACA;AACA;;AAPA;AApCA","names":["components","SideBar","snapshot","data","messages","body","user_id","cards","drawer","links","computed","invalid","methods","clear","submit","message"],"sourceRoot":"src/views","sources":["ChatBoard.vue"],"sourcesContent":["<template>\n <v-app id=\"inspire\">\n  <SideBar />\n  <v-main>\n   <v-container class=\"py-8 px-6\" fluid>\n    <v-row>\n     <v-col v-for=\"card in cards\" :key=\"card\" cols=\"12\">\n      <v-card>\n       <v-subheader>{{ card }}</v-subheader>\n\n       <v-list two-line>\n        <template v-for=\"(data, index) in messages\">\n         <v-list-item :key=\"index\">\n          <v-list-item-avatar color=\"grey darken-1\"> </v-list-item-avatar>\n\n          <v-list-item-content>\n           <v-list-item-subtitle class=\"message\">\n            {{ data.message }}\n           </v-list-item-subtitle>\n          </v-list-item-content>\n         </v-list-item>\n\n         <v-divider v-if=\"n !== 6\" :key=\"`divider-${index}`\" inset></v-divider>\n        </template>\n       </v-list>\n      </v-card>\n     </v-col>\n    </v-row>\n   </v-container>\n   <v-textarea\n    v-model=\"body\"\n    append-outer-icon=\"mdi-comment\"\n    class=\"mx-2\"\n    label=\"メッセージを送信する\"\n    rows=\"3\"\n    auto-grow\n   ></v-textarea>\n   <v-btn class=\"mr-4\" type=\"submit\" :disabled=\"invalid\" @click=\"submit\">\n    submit\n   </v-btn>\n   <v-btn @click=\"clear\"> clear </v-btn>\n  </v-main>\n </v-app>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\nimport SideBar from \"@/components/layouts/SideBar\";\n\nexport default {\n components: {\n  SideBar,\n },\n async created() {\n  this.user_id = this.$route.query.user_id;\n\n  const chatRef = firebase.firestore().collection(\"chats\");\n  const snapshot = await chatRef.get();\n\n  snapshot.forEach((doc) => {\n   this.messages.push(doc.data());\n  });\n },\n data: () => ({\n  messages: [],\n  body: \"\",\n  user_id: \"\",\n  cards: [\"Today\"],\n  drawer: null,\n  links: [\n   [\"mdi-inbox-arrow-down\", \"Inbox\"],\n   [\"mdi-send\", \"Send\"],\n   [\"mdi-delete\", \"Trash\"],\n   [\"mdi-alert-octagon\", \"Spam\"],\n  ],\n  //   invalid: false,\n }),\n computed: {\n  invalid() {\n   if (!this.body) {\n    return true;\n   }\n   return false;\n  },\n },\n methods: {\n  clear() {\n   this.body = \"\";\n  },\n  submit() {\n   this.messages.unshift({ message: this.body });\n   this.body = \"\";\n  },\n },\n};\n</script>\n\n<style scoped>\n.message {\n text-align: left;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}