{"ast":null,"code":"import _objectSpread from \"/Users/masakiiida/Documents/Project/Portfolio/vue-chat/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/masakiiida/Documents/Project/Portfolio/vue-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nimport SideBar from \"@/components/layouts/SideBar\";\nimport CreateRoom from \"@/components/modal/CreateRoom\";\nexport default {\n  components: {\n    SideBar: SideBar,\n    CreateRoom: CreateRoom\n  },\n  data: function data() {\n    return {\n      rooms: [],\n      drawer: null,\n      roomId: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.getRooms();\n    var roomRef = firebase.firestore().collection(\"rooms\");\n    roomRef.collection(\"rooms\").orderBy(\"createdAt\", \"asc\").onSnapshot(function (snapshot) {\n      snapshot.docChanges().forEach(function (change) {\n        //  console.log(\"new message\", change.doc.data());\n        _this.roomId.push(change.doc.data());\n      });\n    });\n  },\n  methods: {\n    getRooms: function getRooms() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var roomRef, snapshot;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.rooms = [];\n                roomRef = firebase.firestore().collection(\"rooms\");\n                _context.next = 4;\n                return roomRef.get();\n\n              case 4:\n                snapshot = _context.sent;\n                console.log(\"snapshot\", snapshot);\n                snapshot.docs.map(function (doc) {\n                  var data = _objectSpread({}, doc.data());\n\n                  data.id = doc.id;\n                  console.log(data);\n\n                  _this2.rooms.push(data);\n                }); //    snapshot.docs.map((doc) => {\n                //     console.log(doc.data());\n                //     this.rooms.push(doc.data());\n                //    });\n\n                console.log(_this2.rooms);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    created: function created() {\n      var _this3 = this;\n\n      firebase.firestore().collection(\"rooms\").orderBy(\"createdAt\", \"asc\").get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this3.roomId.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          }));\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACAA;AACAC,oBADA;AAEAC;AAFA,GADA;AAKAC;AAAA;AACAC,eADA;AAEAC,kBAFA;AAGAC;AAHA;AAAA,GALA;AAUAC,SAVA,qBAUA;AAAA;;AACA;AAEA;AACAC,YACAC,UADA,CACA,OADA,EAEAC,OAFA,CAEA,WAFA,EAEA,KAFA,EAGAC,UAHA,CAGA;AACAC;AACA;AACA;AACA,OAHA;AAIA,KARA;AASA,GAvBA;AAwBAC;AACAC,YADA,sBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACAN,uBAFA,GAEAO,wCAFA;AAAA;AAAA,uBAGAP,aAHA;;AAAA;AAGAI,wBAHA;AAIAI;AAEAJ;AACA;;AACAT;AACAa;;AACA;AACA,iBALA,EANA,CAaA;AACA;AACA;AACA;;AACAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,KAnBA;AAoBAC,WApBA,qBAoBA;AAAA;;AACAF,eACAG,SADA,GAEAT,UAFA,CAEA,OAFA,EAGAC,OAHA,CAGA,WAHA,EAGA,KAHA,EAIAS,GAJA,GAKAC,IALA,CAKA;AACAR;AACA;AAAAS;AAAA;AACA,SAFA;AAGA,OATA;AAUA;AA/BA;AAxBA","names":["components","SideBar","CreateRoom","data","rooms","drawer","roomId","mounted","roomRef","collection","orderBy","onSnapshot","snapshot","methods","getRooms","firebase","console","created","firestore","get","then","id"],"sourceRoot":"src/views","sources":["RoomList.vue"],"sourcesContent":["<template>\n <v-app id=\"inspire\">\n  <v-app-bar app>\n   <v-app-bar-nav-icon @click=\"drawer = !drawer\"></v-app-bar-nav-icon>\n   <v-toolbar-title>ルーム</v-toolbar-title>\n  </v-app-bar>\n  <v-navigation-drawer v-model=\"drawer\" app light>\n   <SideBar />\n  </v-navigation-drawer>\n  <v-main>\n   <v-container>\n    <v-row>\n     <v-col cols=\"4\">\n      <CreateRoom />\n     </v-col>\n     <v-col v-for=\"room in rooms\" :key=\"room.id\" cols=\"4\">\n      <router-link :to=\"{ path: '/chat', query: { room_id: room.id } }\">\n       <v-avatar color=\"grey lighten-2\" size=\"128\">\n        <img\n         src=\"https://cdn.vuetifyjs.com/images/john.jpg\"\n         v-if=\"!room.thumbnailUrl\"\n        />\n        <img :src=\"room.thumbnailUrl\" v-if=\"room.thumbnailUrl\" />\n       </v-avatar>\n      </router-link>\n     </v-col>\n    </v-row>\n   </v-container>\n  </v-main>\n </v-app>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\nimport SideBar from \"@/components/layouts/SideBar\";\nimport CreateRoom from \"@/components/modal/CreateRoom\";\nexport default {\n components: {\n  SideBar,\n  CreateRoom,\n },\n data: () => ({\n  rooms: [],\n  drawer: null,\n  roomId: [],\n }),\n mounted() {\n  this.getRooms();\n\n  const roomRef = firebase.firestore().collection(\"rooms\");\n  roomRef\n   .collection(\"rooms\")\n   .orderBy(\"createdAt\", \"asc\")\n   .onSnapshot((snapshot) => {\n    snapshot.docChanges().forEach((change) => {\n     //  console.log(\"new message\", change.doc.data());\n     this.roomId.push(change.doc.data());\n    });\n   });\n },\n methods: {\n  async getRooms() {\n   this.rooms = [];\n   const roomRef = firebase.firestore().collection(\"rooms\");\n   const snapshot = await roomRef.get();\n   console.log(\"snapshot\", snapshot);\n\n   snapshot.docs.map((doc) => {\n    const data = { ...doc.data() };\n    data.id = doc.id;\n    console.log(data);\n    this.rooms.push(data);\n   });\n\n   //    snapshot.docs.map((doc) => {\n   //     console.log(doc.data());\n   //     this.rooms.push(doc.data());\n   //    });\n   console.log(this.rooms);\n  },\n  created() {\n   firebase\n    .firestore()\n    .collection(\"rooms\")\n    .orderBy(\"createdAt\", \"asc\")\n    .get()\n    .then((snapshot) => {\n     snapshot.forEach((doc) => {\n      this.roomId.push({ ...doc.data(), id: doc.id });\n     });\n    });\n  },\n },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}