{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nexport default {\n  data: () => ({\n    valid: true,\n    name: \"\",\n    nameRules: [v => !!v || \"Name is required\", v => v && v.length <= 10 || \"Name must be less than 10 characters\"],\n    email: \"\",\n    emailRules: [v => !!v || \"メールアドレスを入力してください\", v => /.+@.+\\..+/.test(v) || \"メールアドレスが不正です\"],\n    password: \"\",\n    message: \"\",\n    errorMessage: \"\"\n  }),\n\n  mounted() {\n    if (localStorage.message) {\n      this.message = localStorage.message;\n      localStorage.message = \"\";\n    }\n  },\n\n  computed: {\n    isValid() {\n      return !this.valid;\n    }\n\n  },\n  methods: {\n    validate() {\n      this.$refs.form.validate();\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n\n    submit() {\n      firebase.auth().signInWithEmailAndPassword(this.email, this.password).then(result => {\n        console.log(\"success\");\n        console.log(\"user\", result.user);\n        const auth = {\n          displayName: result.user.displayName,\n          email: result.user.email,\n          uid: result.user.uid,\n          refreshToken: result.user.refreshToken,\n          photoURL: result.user.photoURL\n        };\n        sessionStorage.setItem(\"user\", JSON.stringify(auth));\n        this.$router.push(\"/\");\n      }).catch(error => {\n        console.log(\"fail\", error);\n        this.errorMessage = \"ログインに失敗しました\";\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AAEA;AACAA;AACAC,eADA;AAEAC,YAFA;AAGAC,gBACAC,8BADA,EAEAA,kEAFA,CAHA;AAOAC,aAPA;AAQAC,iBACAF,8BADA,EAEAA,0CAFA,CARA;AAYAG,gBAZA;AAaAC,eAbA;AAcAC;AAdA,IADA;;AAiBAC;AACA;AACA;AACAC;AACA;AACA,GAtBA;;AAuBAC;AACAC;AACA;AACA;;AAHA,GAvBA;AA4BAC;AACAC;AACA;AACA,KAHA;;AAIAC;AACA;AACA,KANA;;AAOAC;AACA;AACA,KATA;;AAUAC;AACAC,eACAC,IADA,GAEAC,0BAFA,CAEA,UAFA,EAEA,aAFA,EAGAC,IAHA,CAGAC;AACAC;AACAA;AAEA;AACAC,8CADA;AAEApB,kCAFA;AAGAqB,8BAHA;AAIAC,gDAJA;AAKAC;AALA;AAQAC;AAEA;AACA,OAlBA,EAmBAC,KAnBA,CAmBAC;AACAP;AACA;AACA,OAtBA;AAuBA;;AAlCA;AA5BA","names":["data","valid","name","nameRules","v","email","emailRules","password","message","errorMessage","mounted","localStorage","computed","isValid","methods","validate","reset","resetValidation","submit","firebase","auth","signInWithEmailAndPassword","then","result","console","displayName","uid","refreshToken","photoURL","sessionStorage","catch","error"],"sourceRoot":"src/views","sources":["LoginView.vue"],"sourcesContent":["<template>\n <v-app>\n  <div class=\"login-wrap\">\n   <v-card class=\"login-form\">\n    <v-card-title class=\"login-title\">Login</v-card-title>\n    <v-card-subtitle>ユーザー情報をご入力ください。</v-card-subtitle>\n    <v-btn text color=\"light-blue\" to=\"signup\">新規登録はこちら</v-btn>\n    <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n     <v-text-field\n      v-model=\"email\"\n      :rules=\"emailRules\"\n      label=\"E-mail\"\n      required\n     ></v-text-field>\n\n     <v-text-field\n      v-model=\"password\"\n      type=\"password\"\n      label=\"Password\"\n     ></v-text-field>\n\n     <v-btn\n      color=\"success\"\n      class=\"login-btn\"\n      @click=\"submit\"\n      :disabled=\"isValid\"\n      >ログイン</v-btn\n     >\n\n     <!-- <v-btn>Clear</v-btn> -->\n\n     <v-alert dense text type=\"success\" class=\"success-message\" v-if=\"message\">\n      <strong>{{ message }}</strong>\n     </v-alert>\n\n     <v-alert\n      dense\n      outlined\n      type=\"error\"\n      class=\"error-message\"\n      v-if=\"errorMessage\"\n     >\n      <strong>{{ errorMessage }}</strong>\n     </v-alert>\n    </v-form>\n   </v-card>\n  </div>\n </v-app>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\n\nexport default {\n data: () => ({\n  valid: true,\n  name: \"\",\n  nameRules: [\n   (v) => !!v || \"Name is required\",\n   (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\n  ],\n  email: \"\",\n  emailRules: [\n   (v) => !!v || \"メールアドレスを入力してください\",\n   (v) => /.+@.+\\..+/.test(v) || \"メールアドレスが不正です\",\n  ],\n  password: \"\",\n  message: \"\",\n  errorMessage: \"\",\n }),\n mounted() {\n  if (localStorage.message) {\n   this.message = localStorage.message;\n   localStorage.message = \"\";\n  }\n },\n computed: {\n  isValid() {\n   return !this.valid;\n  },\n },\n methods: {\n  validate() {\n   this.$refs.form.validate();\n  },\n  reset() {\n   this.$refs.form.reset();\n  },\n  resetValidation() {\n   this.$refs.form.resetValidation();\n  },\n  submit() {\n   firebase\n    .auth()\n    .signInWithEmailAndPassword(this.email, this.password)\n    .then((result) => {\n     console.log(\"success\");\n     console.log(\"user\", result.user);\n\n     const auth = {\n      displayName: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid,\n      refreshToken: result.user.refreshToken,\n      photoURL: result.user.photoURL,\n     };\n\n     sessionStorage.setItem(\"user\", JSON.stringify(auth));\n\n     this.$router.push(\"/\");\n    })\n    .catch((error) => {\n     console.log(\"fail\", error);\n     this.errorMessage = \"ログインに失敗しました\";\n    });\n  },\n },\n};\n</script>\n\n<style lang=\"scss\">\n.login-wrap {\n padding: 100px;\n\n .login-form {\n  width: 600px;\n  margin: auto;\n  padding: 30px;\n\n  .login-title {\n   display: inline-block;\n  }\n\n  .login-btn {\n   margin-right: 20px;\n  }\n\n  .success-message {\n   margin-top: 20px;\n  }\n\n  .error-message {\n   margin-top: 20px;\n  }\n }\n}\n\n@media screen and (max-width: 600px) {\n .login-wrap {\n  padding: 20px !important;\n\n  .login-form {\n   width: 100%;\n  }\n }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}