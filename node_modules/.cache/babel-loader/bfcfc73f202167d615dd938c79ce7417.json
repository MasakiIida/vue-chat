{"ast":null,"code":"import _objectSpread from \"/Users/masakiiida/Documents/Project/Portfolio/vue-chat/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/masakiiida/Documents/Project/Portfolio/vue-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nimport SideBar from \"@/components/layouts/SideBar\";\nimport CreateRoom from \"@/components/modal/CreateRoom\";\nexport default {\n  components: {\n    SideBar: SideBar,\n    CreateRoom: CreateRoom\n  },\n  data: function data() {\n    return {\n      rooms: [],\n      drawer: null //   roomId: \"\",\n\n    };\n  },\n  mounted: function mounted() {\n    this.getRooms();\n  },\n  methods: {\n    getRooms: function getRooms() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var roomRef, snapshot;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.rooms = [];\n                roomRef = firebase.firestore().collection(\"rooms\");\n                _context.next = 4;\n                return roomRef.get();\n\n              case 4:\n                snapshot = _context.sent;\n                console.log(\"snapshot\", snapshot);\n                snapshot.docs.map(function (doc) {\n                  var data = _objectSpread({}, doc.data());\n\n                  data.id = doc.id;\n                  console.log(data);\n\n                  _this.rooms.push(data);\n                }); //    snapshot.docs.map((doc) => {\n                //     console.log(doc.data());\n                //     this.rooms.push(doc.data());\n                //    });\n\n                console.log(_this.rooms);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    deletePost: function deletePost() {\n      var _this2 = this;\n\n      firebase.firestore().collection(\"posts\").doc(this.list.id).delete();\n      console.log();\n      this.$swal({\n        title: \"内容確認\",\n        text: \"投稿を削除しますか？\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willDelete) {\n        if (willDelete) {\n          _this2.$swal(\"投稿を削除しました\", {\n            icon: \"success\"\n          });\n\n          _this2.$router.go({\n            path: \"/board/\".concat(_this2.$route.params.uid),\n            force: true\n          });\n        } else {\n          _this2.$swal(\"キャンセルしました。\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACAA;AACAC,oBADA;AAEAC;AAFA,GADA;AAKAC;AAAA;AACAC,eADA;AAEAC,kBAFA,CAGA;;AAHA;AAAA,GALA;AAUAC,SAVA,qBAUA;AACA;AACA,GAZA;AAaAC;AACAC,YADA,sBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACAC,uBAFA,GAEAC,wCAFA;AAAA;AAAA,uBAGAD,aAHA;;AAAA;AAGAE,wBAHA;AAIAC;AAEAD;AACA;;AACAR;AACAS;;AACA;AACA,iBALA,EANA,CAaA;AACA;AACA;AACA;;AACAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,KAnBA;AAoBAC,cApBA,wBAoBA;AAAA;;AACAH;AACAE;AACA;AACAE,qBADA;AAEAC,0BAFA;AAGAC,uBAHA;AAIAC,qBAJA;AAKAC;AALA,SAMAC,IANA,CAMA;AACA;AACA;AACAH;AADA;;AAGA;AACAI,4DADA;AAEAC;AAFA;AAIA,SARA,MAQA;AACA;AACA;AACA,OAlBA;AAmBA;AA1CA;AAbA","names":["components","SideBar","CreateRoom","data","rooms","drawer","mounted","methods","getRooms","roomRef","firebase","snapshot","console","deletePost","title","text","icon","buttons","dangerMode","then","path","force"],"sourceRoot":"src/views","sources":["RoomList.vue"],"sourcesContent":["<template>\n <v-app id=\"inspire\">\n  <v-app-bar app>\n   <v-app-bar-nav-icon @click=\"drawer = !drawer\"></v-app-bar-nav-icon>\n   <v-toolbar-title>ルーム</v-toolbar-title>\n  </v-app-bar>\n  <v-navigation-drawer v-model=\"drawer\" app light>\n   <SideBar />\n  </v-navigation-drawer>\n  <v-main>\n   <v-container>\n    <v-row>\n     <v-col cols=\"4\">\n      <CreateRoom />\n     </v-col>\n     <v-col v-for=\"room in rooms\" :key=\"room.id\" cols=\"4\">\n      <router-link :to=\"{ path: '/chat', query: { room_id: room.id } }\">\n       <v-avatar color=\"grey lighten-2\" size=\"128\">\n        <img\n         src=\"https://cdn.vuetifyjs.com/images/john.jpg\"\n         v-if=\"!room.thumbnailUrl\"\n        />\n        <img :src=\"room.thumbnailUrl\" v-if=\"room.thumbnailUrl\" />\n       </v-avatar>\n      </router-link>\n      <v-btn @click=\"deleteRoom\">削除</v-btn>\n     </v-col>\n    </v-row>\n   </v-container>\n  </v-main>\n </v-app>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\nimport SideBar from \"@/components/layouts/SideBar\";\nimport CreateRoom from \"@/components/modal/CreateRoom\";\nexport default {\n components: {\n  SideBar,\n  CreateRoom,\n },\n data: () => ({\n  rooms: [],\n  drawer: null,\n  //   roomId: \"\",\n }),\n mounted() {\n  this.getRooms();\n },\n methods: {\n  async getRooms() {\n   this.rooms = [];\n   const roomRef = firebase.firestore().collection(\"rooms\");\n   const snapshot = await roomRef.get();\n   console.log(\"snapshot\", snapshot);\n\n   snapshot.docs.map((doc) => {\n    const data = { ...doc.data() };\n    data.id = doc.id;\n    console.log(data);\n    this.rooms.push(data);\n   });\n\n   //    snapshot.docs.map((doc) => {\n   //     console.log(doc.data());\n   //     this.rooms.push(doc.data());\n   //    });\n   console.log(this.rooms);\n  },\n  deletePost() {\n   firebase.firestore().collection(\"posts\").doc(this.list.id).delete();\n   console.log();\n   this.$swal({\n    title: \"内容確認\",\n    text: \"投稿を削除しますか？\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true,\n   }).then((willDelete) => {\n    if (willDelete) {\n     this.$swal(\"投稿を削除しました\", {\n      icon: \"success\",\n     });\n     this.$router.go({\n      path: `/board/${this.$route.params.uid}`,\n      force: true,\n     });\n    } else {\n     this.$swal(\"キャンセルしました。\");\n    }\n   });\n  },\n },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}