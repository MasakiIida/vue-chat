{"ast":null,"code":"import _asyncToGenerator from \"/Users/masakiiida/Documents/Project/Portfolio/vue-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nexport default {\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var roomRef, roomDoc;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.roomId = _this.$route.query.room_id;\n              console.log(\"roomId\", _this.roomId);\n              roomRef = firebase.firestore().collection(\"rooms\").doc(_this.roomId);\n              _context.next = 5;\n              return roomRef.get();\n\n            case 5:\n              roomDoc = _context.sent;\n\n              if (roomDoc.exists) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 9;\n              return _this.$router.push(\"/\");\n\n            case 9:\n              _this.room = roomDoc.data();\n              console.log(\"room\", _this.room);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  data: function data() {\n    return {\n      messages: [],\n      body: \"\",\n      roomId: \"\",\n      room: null,\n      drawer: null,\n      dialog: false,\n      n: \"\",\n      auth: null\n    };\n  },\n  computed: {\n    invalid: function invalid() {\n      if (!this.body) {\n        return true;\n      }\n\n      return false;\n    }\n  },\n  methods: {\n    deleteRoom: function deleteRoom() {\n      var _this2 = this;\n\n      var room_id = this.$route.query.room_id;\n      firebase.firestore().collection(\"rooms\").doc(room_id).delete(this.body).then(function () {\n        console.log(room_id, \"は削除されました\");\n\n        _this2.$router.push(\"/\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AAEA;AACAA,SADA,qBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACAC;AAEAC,qBAJA,GAIAC,0DAJA;AAAA;AAAA,qBAKAD,aALA;;AAAA;AAKAE,qBALA;;AAAA,kBAMAA,cANA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOA,uBAPA;;AAAA;AASA;AACAH;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,GAZA;AAaAI;AAAA;AACAC,kBADA;AAEAC,cAFA;AAGAC,gBAHA;AAIAC,gBAJA;AAKAC,kBALA;AAMAC,mBANA;AAOAC,WAPA;AAQAC;AARA;AAAA,GAbA;AAuBAC;AACAC,WADA,qBACA;AACA;AACA;AACA;;AACA;AACA;AANA,GAvBA;AA+BAC;AACAC,cADA,wBACA;AAAA;;AACA;AACAd,eACAe,SADA,GAEAC,UAFA,CAEA,OAFA,EAGAC,GAHA,CAGAC,OAHA,EAIAC,MAJA,CAIA,SAJA,EAKAC,IALA,CAKA;AACAtB;;AACA;AACA,OARA;AASA;AAZA;AA/BA","names":["created","console","roomRef","firebase","roomDoc","data","messages","body","roomId","room","drawer","dialog","n","auth","computed","invalid","methods","deleteRoom","firestore","collection","doc","room_id","delete","then"],"sourceRoot":"src/components/modal","sources":["DeleteRoom.vue"],"sourcesContent":["<template>\n <v-row justify=\"center\">\n  <v-dialog v-model=\"dialog\" max-width=\"290\">\n   <template v-slot:activator=\"{ on, attrs }\">\n    <v-btn\n     class=\"delete-button\"\n     color=\"error\"\n     fab\n     small\n     v-bind=\"attrs\"\n     v-on=\"on\"\n     ><v-icon>mdi-trash-can</v-icon>\n    </v-btn>\n   </template>\n   <v-card>\n    <v-card-title class=\"text-h6\">ルームを削除しますか？</v-card-title>\n    <v-card-actions>\n     <v-spacer></v-spacer>\n     <v-btn color=\"\" text @click=\"dialog = false\"> キャンセル </v-btn>\n     <v-btn\n      color=\"error\"\n      @click=\"\n       deleteRoom();\n       dialog = false;\n      \"\n     >\n      削除\n     </v-btn>\n    </v-card-actions>\n   </v-card>\n  </v-dialog>\n </v-row>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\n\nexport default {\n async created() {\n  this.roomId = this.$route.query.room_id;\n  console.log(\"roomId\", this.roomId);\n\n  const roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n  const roomDoc = await roomRef.get();\n  if (!roomDoc.exists) {\n   await this.$router.push(\"/\");\n  }\n  this.room = roomDoc.data();\n  console.log(\"room\", this.room);\n },\n data: () => ({\n  messages: [],\n  body: \"\",\n  roomId: \"\",\n  room: null,\n  drawer: null,\n  dialog: false,\n  n: \"\",\n  auth: null,\n }),\n computed: {\n  invalid() {\n   if (!this.body) {\n    return true;\n   }\n   return false;\n  },\n },\n methods: {\n  deleteRoom() {\n   const room_id = this.$route.query.room_id;\n   firebase\n    .firestore()\n    .collection(\"rooms\")\n    .doc(room_id)\n    .delete(this.body)\n    .then(() => {\n     console.log(room_id, \"は削除されました\");\n     this.$router.push(\"/\");\n    });\n  },\n },\n};\n</script>\n\n<style>\n.delete-button {\n position: absolute;\n top: 10px;\n right: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}