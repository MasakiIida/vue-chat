{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      valid: true,\n      name: \"\",\n      nameRules: [function (v) {\n        return !!v || \"Name is required\";\n      }, function (v) {\n        return v && v.length <= 10 || \"Name must be less than 10 characters\";\n      }],\n      email: \"\",\n      emailRules: [function (v) {\n        return !!v || \"E-mail is required\";\n      }, function (v) {\n        return /.+@.+\\..+/.test(v) || \"E-mail must be valid\";\n      }],\n      select: null,\n      items: [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"],\n      checkbox: false\n    };\n  },\n  methods: {\n    validate: function validate() {\n      this.$refs.form.validate();\n    },\n    reset: function reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation: function resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACAA;AAAA;AACAC,iBADA;AAEAC,cAFA;AAGAC,kBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA,CAHA;AAOAC,eAPA;AAQAC,mBACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA,CARA;AAYAC,kBAZA;AAaAC,qDAbA;AAcAC;AAdA;AAAA,GADA;AAiBAC;AACAC,YADA,sBACA;AACA;AACA,KAHA;AAIAC,SAJA,mBAIA;AACA;AACA,KANA;AAOAC,mBAPA,6BAOA;AACA;AACA;AATA;AAjBA","names":["data","valid","name","nameRules","email","emailRules","select","items","checkbox","methods","validate","reset","resetValidation"],"sourceRoot":"src/views","sources":["LoginView.vue"],"sourcesContent":["<template>\n <v-app>\n  <div>\n   <v-card\n    ><v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n     <v-text-field\n      v-model=\"name\"\n      :counter=\"10\"\n      :rules=\"nameRules\"\n      label=\"Name\"\n      required\n     ></v-text-field>\n\n     <v-text-field\n      v-model=\"email\"\n      :rules=\"emailRules\"\n      label=\"E-mail\"\n      required\n     ></v-text-field>\n\n     <v-select\n      v-model=\"select\"\n      :items=\"items\"\n      :rules=\"[(v) => !!v || 'Item is required']\"\n      label=\"Item\"\n      required\n     ></v-select>\n\n     <v-checkbox\n      v-model=\"checkbox\"\n      :rules=\"[(v) => !!v || 'You must agree to continue!']\"\n      label=\"Do you agree?\"\n      required\n     ></v-checkbox>\n\n     <v-btn :disabled=\"!valid\" color=\"success\" class=\"mr-4\" @click=\"validate\">\n      Validate\n     </v-btn>\n\n     <v-btn color=\"error\" class=\"mr-4\" @click=\"reset\"> Reset Form </v-btn>\n\n     <v-btn color=\"warning\" @click=\"resetValidation\"> Reset Validation </v-btn>\n    </v-form></v-card\n   >\n  </div>\n </v-app>\n</template>\n\n<script>\nexport default {\n data: () => ({\n  valid: true,\n  name: \"\",\n  nameRules: [\n   (v) => !!v || \"Name is required\",\n   (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\n  ],\n  email: \"\",\n  emailRules: [\n   (v) => !!v || \"E-mail is required\",\n   (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n  ],\n  select: null,\n  items: [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"],\n  checkbox: false,\n }),\n methods: {\n  validate() {\n   this.$refs.form.validate();\n  },\n  reset() {\n   this.$refs.form.reset();\n  },\n  resetValidation() {\n   this.$refs.form.resetValidation();\n  },\n },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}