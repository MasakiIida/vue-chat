{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nexport default {\n  data: () => ({\n    valid: true,\n    name: \"\",\n    nameRules: [v => !!v || \"ユーザー名を入力してください\", v => v && v.length <= 10 || \"ユーザー名は10文字以内で入力してください\"],\n    email: \"\",\n    emailRules: [v => !!v || \"メールアドレスを入力してください\", v => /.+@.+\\..+/.test(v) || \"メールアドレスが不正です\"],\n    password: \"\",\n    passwordRules: [v => !!v || \"パスワードを入力してください\", v => v && v.length >= 6 || \"パスワードは6文字以上で入力してください\"],\n    errorMessage: \"\"\n  }),\n  computed: {\n    isValid() {\n      return !this.valid;\n    }\n\n  },\n  methods: {\n    validate() {\n      this.$refs.form.validate();\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n\n    submit() {\n      firebase.auth().createUserWithEmailAndPassword(this.email, this.password).then(async result => {\n        console.log(\"success\", result);\n        await result.user.updateProfile({\n          displayName: this.name\n        });\n        console.log(\"update user\", result.user);\n        localStorage.message = \"新規作成に成功しました\"; // サインアップに成功したらログインページにリダイレクト\n\n        this.$router.push(\"/login\");\n      }).catch(error => {\n        console.log(\"success\", error);\n        this.errorMessage = \"ユーザーの新規作成に失敗しました\";\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AAEA;AACAA;AACAC,eADA;AAEAC,YAFA;AAGAC,gBACAC,4BADA,EAEAA,mDAFA,CAHA;AAOAC,aAPA;AAQAC,iBACAF,8BADA,EAEAA,0CAFA,CARA;AAYAG,gBAZA;AAaAC,oBACAJ,4BADA,EAEAA,iDAFA,CAbA;AAiBAK;AAjBA,IADA;AAoBAC;AACAC;AACA;AACA;;AAHA,GApBA;AAyBAC;AACAC;AACA;AACA,KAHA;;AAIAC;AACA;AACA,KANA;;AAOAC;AACA;AACA,KATA;;AAUAC;AACAC,eACAC,IADA,GAEAC,8BAFA,CAEA,UAFA,EAEA,aAFA,EAGAC,IAHA,CAGA;AACAC;AACA;AAAAC;AAAA;AACAD;AAEAE,6CALA,CAOA;;AACA;AACA,OAZA,EAaAC,KAbA,CAaAC;AACAJ;AACA;AACA,OAhBA;AAiBA;;AA5BA;AAzBA","names":["data","valid","name","nameRules","v","email","emailRules","password","passwordRules","errorMessage","computed","isValid","methods","validate","reset","resetValidation","submit","firebase","auth","createUserWithEmailAndPassword","then","console","displayName","localStorage","catch","error"],"sourceRoot":"src/views","sources":["SignUp.vue"],"sourcesContent":["<template>\n <v-app>\n  <div class=\"login-wrap\">\n   <v-card class=\"login-form\">\n    <v-card-title class=\"login-title\">Sign Up</v-card-title>\n    <v-card-subtitle>ユーザー情報をご入力ください。</v-card-subtitle>\n    <v-btn text color=\"light-blue\" to=\"login\">ログインはこちら</v-btn>\n    <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n     <v-text-field\n      v-model=\"name\"\n      :rules=\"nameRules\"\n      label=\"User name\"\n      required\n     ></v-text-field>\n\n     <v-text-field\n      v-model=\"email\"\n      :rules=\"emailRules\"\n      label=\"E-mail\"\n      required\n     ></v-text-field>\n\n     <v-text-field\n      v-model=\"password\"\n      :rules=\"passwordRules\"\n      type=\"password\"\n      label=\"Password\"\n      required\n     ></v-text-field>\n\n     <v-btn\n      color=\"success\"\n      class=\"login-btn\"\n      @click=\"submit\"\n      :disabled=\"isValid\"\n      >サインアップ</v-btn\n     >\n     <!-- <v-btn>Clear</v-btn> -->\n\n     <v-alert\n      dense\n      outlined\n      type=\"error\"\n      class=\"error-message\"\n      v-if=\"errorMessage\"\n     >\n      <strong>{{ errorMessage }}</strong>\n     </v-alert>\n    </v-form>\n   </v-card>\n  </div>\n </v-app>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\n\nexport default {\n data: () => ({\n  valid: true,\n  name: \"\",\n  nameRules: [\n   (v) => !!v || \"ユーザー名を入力してください\",\n   (v) => (v && v.length <= 10) || \"ユーザー名は10文字以内で入力してください\",\n  ],\n  email: \"\",\n  emailRules: [\n   (v) => !!v || \"メールアドレスを入力してください\",\n   (v) => /.+@.+\\..+/.test(v) || \"メールアドレスが不正です\",\n  ],\n  password: \"\",\n  passwordRules: [\n   (v) => !!v || \"パスワードを入力してください\",\n   (v) => (v && v.length >= 6) || \"パスワードは6文字以上で入力してください\",\n  ],\n  errorMessage: \"\",\n }),\n computed: {\n  isValid() {\n   return !this.valid;\n  },\n },\n methods: {\n  validate() {\n   this.$refs.form.validate();\n  },\n  reset() {\n   this.$refs.form.reset();\n  },\n  resetValidation() {\n   this.$refs.form.resetValidation();\n  },\n  submit() {\n   firebase\n    .auth()\n    .createUserWithEmailAndPassword(this.email, this.password)\n    .then(async (result) => {\n     console.log(\"success\", result);\n     await result.user.updateProfile({ displayName: this.name });\n     console.log(\"update user\", result.user);\n\n     localStorage.message = \"新規作成に成功しました\";\n\n     // サインアップに成功したらログインページにリダイレクト\n     this.$router.push(\"/login\");\n    })\n    .catch((error) => {\n     console.log(\"success\", error);\n     this.errorMessage = \"ユーザーの新規作成に失敗しました\";\n    });\n  },\n },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}