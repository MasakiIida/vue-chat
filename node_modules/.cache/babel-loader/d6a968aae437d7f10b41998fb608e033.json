{"ast":null,"code":"import _asyncToGenerator from \"/Users/masakiiida/Documents/Project/Portfolio/vue-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nimport SideBar from \"@/components/layouts/SideBar\";\nimport DeleteRoom from \"@/components/modal/DeleteRoom\";\nexport default {\n  components: {\n    SideBar: SideBar,\n    DeleteRoom: DeleteRoom\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var roomRef, roomDoc;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.roomId = _this.$route.query.room_id;\n              console.log(\"roomId\", _this.roomId);\n              roomRef = firebase.firestore().collection(\"rooms\").doc(_this.roomId);\n              _context.next = 5;\n              return roomRef.get();\n\n            case 5:\n              roomDoc = _context.sent;\n\n              if (roomDoc.exists) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 9;\n              return _this.$router.push(\"/\");\n\n            case 9:\n              _this.room = roomDoc.data();\n              console.log(\"room\", _this.room);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.auth = JSON.parse(sessionStorage.getItem(\"user\"));\n    console.log(this.auth);\n    var roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n    roomRef.collection(\"messages\").orderBy(\"createdAt\", \"asc\").onSnapshot(function (snapshot) {\n      snapshot.docChanges().forEach(function (change) {\n        console.log(\"new message\", change.doc.data());\n\n        _this2.messages.push(change.doc.data());\n      });\n    });\n  },\n  data: function data() {\n    return {\n      messages: [],\n      body: \"\",\n      roomId: \"\",\n      room: null,\n      cards: [\"トーク\"],\n      drawer: null,\n      n: \"\",\n      auth: null\n    };\n  },\n  computed: {\n    invalid: function invalid() {\n      if (!this.body) {\n        return true;\n      }\n\n      return false;\n    }\n  },\n  methods: {\n    clear: function clear() {\n      this.body = \"\";\n    },\n    submit: function submit() {\n      var _this3 = this;\n\n      var roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n      roomRef.collection(\"messages\").add({\n        message: this.body,\n        name: this.auth.displayName,\n        photoURL: this.auth.photoURL,\n        createdAt: firebase.firestore.Timestamp.now()\n      }).then(function (result) {\n        console.log(\"success\", result);\n        _this3.body = \"\";\n      }).catch(function (error) {\n        console.log(\"fail\", error);\n        alert(\"メッセージの送信に失敗しました\");\n      });\n    } // deleteRoom() {\n    //  const room_id = this.$route.query.room_id;\n    //  firebase\n    //   .firestore()\n    //   .collection(\"rooms\")\n    //   .doc(room_id)\n    //   .delete()\n    //   .then(() => {\n    //    this.$router.push(\"/\");\n    //    console.log(room_id, \"は削除されました\");\n    //   });\n    // },\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AAEA;AACAA;AACAC,oBADA;AAEAC;AAFA,GADA;AAKAC,SALA,qBAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACAC;AAEAC,qBAJA,GAIAC,0DAJA;AAAA;AAAA,qBAKAD,aALA;;AAAA;AAKAE,qBALA;;AAAA,kBAMAA,cANA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOA,uBAPA;;AAAA;AASA;AACAH;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,GAhBA;AAiBAI,SAjBA,qBAiBA;AAAA;;AACA;AACAJ;AAEA;AACAC,YACAI,UADA,CACA,UADA,EAEAC,OAFA,CAEA,WAFA,EAEA,KAFA,EAGAC,UAHA,CAGA;AACAC;AACAR;;AACA;AACA,OAHA;AAIA,KARA;AASA,GA/BA;AAgCAS;AAAA;AACAC,kBADA;AAEAC,cAFA;AAGAC,gBAHA;AAIAC,gBAJA;AAKAC,oBALA;AAMAC,kBANA;AAOAC,WAPA;AAQAC;AARA;AAAA,GAhCA;AA0CAC;AACAC,WADA,qBACA;AACA;AACA;AACA;;AACA;AACA;AANA,GA1CA;AAkDAC;AACAC,SADA,mBACA;AACA;AACA,KAHA;AAIAC,UAJA,oBAIA;AAAA;;AACA;AACArB,cACAI,UADA,CACA,UADA,EAEAkB,GAFA,CAEA;AACAC,0BADA;AAEAC,mCAFA;AAGAC,oCAHA;AAIAC;AAJA,OAFA,EAQAC,IARA,CAQA;AACA5B;AACA;AACA,OAXA,EAYA6B,KAZA,CAYA;AACA7B;AACA8B;AACA,OAfA;AAgBA,KAtBA,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnCA;AAlDA","names":["components","SideBar","DeleteRoom","created","console","roomRef","firebase","roomDoc","mounted","collection","orderBy","onSnapshot","snapshot","data","messages","body","roomId","room","cards","drawer","n","auth","computed","invalid","methods","clear","submit","add","message","name","photoURL","createdAt","then","catch","alert"],"sourceRoot":"src/views","sources":["ChatBoard.vue"],"sourcesContent":["<template>\n <v-app id=\"inspire\">\n  <v-app-bar app>\n   <v-app-bar-nav-icon @click=\"drawer = !drawer\"></v-app-bar-nav-icon>\n   <v-toolbar-title class=\"room-title d-flex\">\n    <h2>{{ room ? room.name : \"\" }}</h2>\n    <DeleteRoom />\n    <!-- <v-btn color=\"error\" fab small right absolute @click=\"deleteRoom\"\n     ><v-icon @click=\"deleteRoom\">mdi-trash-can</v-icon></v-btn\n    > -->\n   </v-toolbar-title>\n  </v-app-bar>\n  <v-navigation-drawer v-model=\"drawer\" app light>\n   <SideBar />\n  </v-navigation-drawer>\n  <v-main>\n   <v-container class=\"py-8 px-6\" fluid>\n    <v-row>\n     <v-col v-for=\"card in cards\" :key=\"card\" cols=\"12\">\n      <v-card>\n       <v-subheader>{{ card }}</v-subheader>\n\n       <v-list two-line>\n        <template v-for=\"(data, index) in messages\">\n         <v-list-item :key=\"index\">\n          <div>\n           <v-list-item-avatar color=\"grey darken-1\">\n            <v-img :src=\"data.photoURL\"></v-img>\n           </v-list-item-avatar>\n           {{ data.name }}\n          </div>\n\n          <v-list-item-content>\n           <v-list-item-subtitle class=\"message\">\n            {{ data.message }}\n           </v-list-item-subtitle>\n          </v-list-item-content>\n         </v-list-item>\n\n         <v-divider v-if=\"n !== 6\" :key=\"`divider-${index}`\" inset></v-divider>\n        </template>\n       </v-list>\n      </v-card>\n     </v-col>\n    </v-row>\n   </v-container>\n   <v-row>\n    <v-col class=\"d-flex align-center\">\n     <v-textarea\n      v-model=\"body\"\n      prepend-inner-icon=\"mdi-comment\"\n      class=\"mx-2\"\n      rows=\"1\"\n      solo\n      auto-grow\n      label=\"メッセージを入力\"\n     ></v-textarea>\n     <v-btn icon class=\"mr-4\" type=\"submit\" :disabled=\"invalid\" @click=\"submit\">\n      <v-icon color=\"blue\">mdi-send</v-icon>\n     </v-btn>\n    </v-col>\n   </v-row>\n\n   <!-- <v-btn @click=\"clear\"> クリア </v-btn> -->\n  </v-main>\n </v-app>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\nimport SideBar from \"@/components/layouts/SideBar\";\nimport DeleteRoom from \"@/components/modal/DeleteRoom\";\n\nexport default {\n components: {\n  SideBar,\n  DeleteRoom,\n },\n async created() {\n  this.roomId = this.$route.query.room_id;\n  console.log(\"roomId\", this.roomId);\n\n  const roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n  const roomDoc = await roomRef.get();\n  if (!roomDoc.exists) {\n   await this.$router.push(\"/\");\n  }\n  this.room = roomDoc.data();\n  console.log(\"room\", this.room);\n },\n mounted() {\n  this.auth = JSON.parse(sessionStorage.getItem(\"user\"));\n  console.log(this.auth);\n\n  const roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n  roomRef\n   .collection(\"messages\")\n   .orderBy(\"createdAt\", \"asc\")\n   .onSnapshot((snapshot) => {\n    snapshot.docChanges().forEach((change) => {\n     console.log(\"new message\", change.doc.data());\n     this.messages.push(change.doc.data());\n    });\n   });\n },\n data: () => ({\n  messages: [],\n  body: \"\",\n  roomId: \"\",\n  room: null,\n  cards: [\"トーク\"],\n  drawer: null,\n  n: \"\",\n  auth: null,\n }),\n computed: {\n  invalid() {\n   if (!this.body) {\n    return true;\n   }\n   return false;\n  },\n },\n methods: {\n  clear() {\n   this.body = \"\";\n  },\n  submit() {\n   const roomRef = firebase.firestore().collection(\"rooms\").doc(this.roomId);\n   roomRef\n    .collection(\"messages\")\n    .add({\n     message: this.body,\n     name: this.auth.displayName,\n     photoURL: this.auth.photoURL,\n     createdAt: firebase.firestore.Timestamp.now(),\n    })\n    .then((result) => {\n     console.log(\"success\", result);\n     this.body = \"\";\n    })\n    .catch((error) => {\n     console.log(\"fail\", error);\n     alert(\"メッセージの送信に失敗しました\");\n    });\n  },\n\n  // deleteRoom() {\n  //  const room_id = this.$route.query.room_id;\n  //  firebase\n  //   .firestore()\n  //   .collection(\"rooms\")\n  //   .doc(room_id)\n  //   .delete()\n  //   .then(() => {\n  //    this.$router.push(\"/\");\n  //    console.log(room_id, \"は削除されました\");\n  //   });\n  // },\n },\n};\n</script>\n\n<style lang=\"scss\">\n@media screen and (max-width: 600px) {\n .v-main {\n  padding-top: 10px !important;\n }\n}\n\n.message {\n text-align: left;\n word-break: break-all;\n white-space: pre-wrap;\n}\n\n.room-title {\n overflow: visible !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}