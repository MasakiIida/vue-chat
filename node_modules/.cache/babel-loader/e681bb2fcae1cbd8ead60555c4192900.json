{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"@/firebase/firebase\";\nexport default {\n  mounted() {\n    this.auth = JSON.parse(sessionStorage.getItem(\"user\"));\n    this.photoUrl = this.auth.photoURL;\n  },\n\n  data: () => ({\n    drawer: null,\n    links: [[\"mdi-home\", \"ルーム\", \"/\"] //  [\"mdi-alert-octagon\", \"Spam\", \"/about\"],\n    ],\n    auth: null,\n    photoUrl: \"\"\n  }),\n  methods: {\n    logout() {\n      firebase.auth().signOut().then(() => {\n        localStorage.message = \"ログアウトしました\";\n        this.$router.push(\"/login\");\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    changeIcon() {\n      this.$refs.fileInput.click();\n    },\n\n    updateIcon() {\n      const user = this.getAuth();\n\n      if (!user) {\n        sessionStorage.removeItem(\"user\");\n        this.$router.push(\"/login\");\n      }\n\n      const file = this.$refs.fileInput.files[0];\n      console.log(file);\n      const filePath = `/user/${file.name}`;\n      firebase.storage().ref().child(filePath).put(file).then(async snapshot => {\n        const photoUrl = await snapshot.ref.getDownloadURL();\n        console.log(\"download\", photoUrl);\n        firebase.auth().onAuthStateChanged(user => {\n          if (user) {\n            user.updateProfile({\n              photoURL: photoUrl\n            });\n            this.auth.photoURL = photoUrl;\n            sessionStorage.setItem(\"user\", JSON.stringify(this.auth));\n            this.photoUrl = photoUrl;\n          }\n        });\n      });\n    },\n\n    getAuth() {\n      return firebase.auth().onAuthStateChanged(user => {\n        return user;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AAEA;AACAA;AACA;AAEA;AACA,GALA;;AAMAC;AACAC,gBADA;AAEAC,YACA,wBADA,CAEA;AAFA,KAFA;AAMAC,cANA;AAOAC;AAPA,IANA;AAeAC;AACAC;AACAC,eACAJ,IADA,GAEAK,OAFA,GAGAC,IAHA,CAGA;AACAC;AACA;AACA,OANA,EAOAC,KAPA,CAOAC;AACAC;AACA,OATA;AAUA,KAZA;;AAaAC;AACA;AACA,KAfA;;AAgBAC;AACA;;AACA;AACAC;AACA;AACA;;AAEA;AACAH;AACA;AAEAN,eACAU,OADA,GAEAC,GAFA,GAGAC,KAHA,CAGAC,QAHA,EAIAC,GAJA,CAIAC,IAJA,EAKAb,IALA,CAKA;AACA;AACAI;AAEAN;AACA;AACAgB;AACAC;AADA;AAIA;AACAR;AAEA;AACA;AACA,SAXA;AAYA,OArBA;AAsBA,KAjDA;;AAkDAS;AACA;AACA;AACA,OAFA;AAGA;;AAtDA;AAfA","names":["mounted","data","drawer","links","auth","photoUrl","methods","logout","firebase","signOut","then","localStorage","catch","error","console","changeIcon","updateIcon","sessionStorage","storage","ref","child","filePath","put","file","user","photoURL","getAuth"],"sourceRoot":"src/components/layouts","sources":["SideBar.vue"],"sourcesContent":["<template>\n <div id=\"app\">\n  <v-sheet color=\"\" class=\"pa-4\">\n   <v-avatar color=\"indigo\">\n    <input\n     type=\"file\"\n     ref=\"fileInput\"\n     accept=\"image/jpeg, image/jpg, image/png\"\n     style=\"display: none\"\n     @change=\"updateIcon\"\n    />\n\n    <v-icon dark v-if=\"!photoUrl\" @click=\"changeIcon\">\n     mdi-account-circle\n    </v-icon>\n    <img :src=\"photoUrl\" v-if=\"photoUrl\" @click=\"changeIcon\" />\n   </v-avatar>\n\n   <div class=\"username\">{{ auth && auth.displayName }}</div>\n  </v-sheet>\n\n  <v-divider></v-divider>\n\n  <v-list>\n   <v-list-item v-for=\"[icon, text, to] in links\" :key=\"icon\" :to=\"to\" link>\n    <v-list-item-icon>\n     <v-icon>{{ icon }}</v-icon>\n    </v-list-item-icon>\n\n    <v-list-item-content>\n     <v-list-item-title>{{ text }}</v-list-item-title>\n    </v-list-item-content>\n   </v-list-item>\n\n   <v-list-item @click=\"logout\">\n    <v-list-item-icon>\n     <v-icon> mdi-logout </v-icon>\n    </v-list-item-icon>\n\n    <v-list-item-content>\n     <v-list-item-title>ログアウト</v-list-item-title>\n    </v-list-item-content>\n   </v-list-item>\n  </v-list>\n </div>\n</template>\n\n<script>\nimport firebase from \"@/firebase/firebase\";\n\nexport default {\n mounted() {\n  this.auth = JSON.parse(sessionStorage.getItem(\"user\"));\n\n  this.photoUrl = this.auth.photoURL;\n },\n data: () => ({\n  drawer: null,\n  links: [\n   [\"mdi-home\", \"ルーム\", \"/\"],\n   //  [\"mdi-alert-octagon\", \"Spam\", \"/about\"],\n  ],\n  auth: null,\n  photoUrl: \"\",\n }),\n methods: {\n  logout() {\n   firebase\n    .auth()\n    .signOut()\n    .then(() => {\n     localStorage.message = \"ログアウトしました\";\n     this.$router.push(\"/login\");\n    })\n    .catch((error) => {\n     console.log(error);\n    });\n  },\n  changeIcon() {\n   this.$refs.fileInput.click();\n  },\n  updateIcon() {\n   const user = this.getAuth();\n   if (!user) {\n    sessionStorage.removeItem(\"user\");\n    this.$router.push(\"/login\");\n   }\n\n   const file = this.$refs.fileInput.files[0];\n   console.log(file);\n   const filePath = `/user/${file.name}`;\n\n   firebase\n    .storage()\n    .ref()\n    .child(filePath)\n    .put(file)\n    .then(async (snapshot) => {\n     const photoUrl = await snapshot.ref.getDownloadURL();\n     console.log(\"download\", photoUrl);\n\n     firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n       user.updateProfile({\n        photoURL: photoUrl,\n       });\n\n       this.auth.photoURL = photoUrl;\n       sessionStorage.setItem(\"user\", JSON.stringify(this.auth));\n\n       this.photoUrl = photoUrl;\n      }\n     });\n    });\n  },\n  getAuth() {\n   return firebase.auth().onAuthStateChanged((user) => {\n    return user;\n   });\n  },\n },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}